<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <context:property-placeholder location="classpath*:META-INF/spring/*.properties"/>

	<!-- local env, export env variable -->
	<!-- DATABASE_URL e.g. postgres://postgres:postgres@localhost:5432/bookmarks -->
	<bean class="java.net.URI" id="dbUrl">
    	<constructor-arg value="${DATABASE_URL}"/>
	</bean>

	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
        <property name="numTestsPerEvictionRun" value="3"/>
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <property name="validationQuery" value="SELECT version();"/>
    </bean>
     <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
 
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

	<!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
   	
    <mvc:resources mapping="/scripts/**" location="/scripts/"/>
    <mvc:resources mapping="/lib/**" location="/lib/"/>

	<context:component-scan base-package="com.bookmarks" />
	<mvc:annotation-driven conversion-service="conversionService"/>
 
	<bean
	   class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
            	<ref bean="restBookmarkConverter" />
            </set>
        </property>
        <property name="formatters">
            <set>
<!--                 <bean class="org.example.MyFormatter"/> -->
<!--                 <bean class="org.example.MyAnnotationFormatterFactory"/> -->
            </set>
        </property>
        <property name="formatterRegistrars">
            <set>
<!--                 <bean class="org.example.MyFormatterRegistrar"/> -->
            </set>
        </property>
    </bean>
    
    <mvc:view-controller path="partials/bookmark-list" view-name="partials/bookmark-list" />
    <mvc:view-controller path="partials/bookmark-detail" view-name="partials/bookmark-detail" />
    <mvc:view-controller path="partials/about" view-name="partials/about" />
 
</beans>